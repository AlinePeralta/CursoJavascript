const charmander = {
    nombre: "Charmander",
    tipo: "Fuego",
    emoji: "üî•",
    efectivoContra: ["Acero", "Insecto", "Hielo", "Hierba"],
    debilContra: ["Roca", "Agua", "Tierra"]
};

const bulbasaur = {
    nombre: "Bulbasaur",
    tipo: "Hierba",
    emoji: "üå±",
    efectivoContra: ["Agua", "Tierra", "Roca"],
    debilContra: ["Fuego", "Hielo", "Veneno", "Volador", "Insecto"]
};

const squirtle = {
    nombre: "Squirtle",
    tipo: "Agua",
    emoji: "üíß",
    efectivoContra: ["Fuego", "Tierra", "Roca"],
    debilContra: ["El√©ctrico", "Hierba"]
};

const pikachu = {
    nombre: "Pikachu",
    tipo: "El√©ctrico",
    emoji: "‚ö°",
    efectivoContra: ["Agua", "Volador"],
    debilContra: ["Tierra"]
};

const pokemons = [charmander, bulbasaur, squirtle, pikachu];

function elegirPokemonAleatorio() {
    const pokemonRandom = Math.floor(Math.random() * pokemons.length);
    return pokemons[pokemonRandom];
}

function mostrarPokemons() {
    return "¬°La batalla est√° por iniciar! \nElige un Pok√©mon:\n1. Charmander üî•\n2. Bulbasaur üå±\n3. Squirtle üíß\n4. Pikachu ‚ö°";
}

function eligePokemon(eleccion) {
    switch (eleccion) {
        case "1":
        case "üî•":
            return charmander;
        case "2":
        case "üå±":
            return bulbasaur;
        case "3":
        case "üíß":
            return squirtle;
        case "4":
        case "‚ö°":
            return pikachu;
        default:
            return null;
    }
}

function mostrarAtaqueDebilidad(pokemon) {
    return `${pokemon.nombre} (${pokemon.emoji})\n ‚úÖ Efectivo contra: ${pokemon.efectivoContra.join(", ")}\n ‚ùå D√©bil contra: ${pokemon.debilContra.join(", ")}`;
}

function mostrarResultado(pokemonUsuario, pokemonContrincante) {
    let resultado;

    if (pokemonUsuario.efectivoContra.includes(pokemonContrincante.tipo)) {
        resultado = `¬°${pokemonUsuario.nombre} (${pokemonUsuario.emoji}) gana contra ${pokemonContrincante.nombre} (${pokemonContrincante.emoji})!`;
    } else if (pokemonUsuario.debilContra.includes(pokemonContrincante.tipo)) {
        resultado = `¬°${pokemonUsuario.nombre} (${pokemonUsuario.emoji}) pierde contra ${pokemonContrincante.nombre} (${pokemonContrincante.emoji})!`;
    } else {
        resultado = `¬°Es un empate entre ${pokemonUsuario.nombre} (${pokemonUsuario.emoji}) y ${pokemonContrincante.nombre} (${pokemonContrincante.emoji})!`;
    }

    let mensajeFinal;
    if (pokemonUsuario.efectivoContra.includes(pokemonContrincante.tipo)) {
        mensajeFinal = `¬°Felicidades! Tu Pok√©mon ${pokemonUsuario.nombre} (${pokemonUsuario.emoji}) ha ganado la batalla üèÜ`;
    } else if (pokemonUsuario.debilContra.includes(pokemonContrincante.tipo)) {
        mensajeFinal = `Lo siento, tu Pok√©mon ${pokemonUsuario.nombre} (${pokemonUsuario.emoji}) ha perdido la batalla üòû`;
    } else {
        mensajeFinal = `¬°Empate! Ninguno de los Pok√©mon gan√≥ esta batalla`;
    }

    return `${resultado}\n${mensajeFinal}`;
}

function buscarPokemonPorNombre(nombre) {
    return pokemons.find(pokemon => pokemon.nombre.toLowerCase() === nombre.toLowerCase());
}

function filtrarPokemonsEfectivosContra(tipo) {
    return pokemons.filter(pokemon => pokemon.efectivoContra.includes(tipo));
}

function jugar() {
    let mensaje = mostrarPokemons();
    let eleccion = prompt(mensaje);

    const pokemonUsuario = eligePokemon(eleccion);
    if (!pokemonUsuario) {
        alert("Pok√©mon no encontrado. Intenta de nuevo.");
        return false;
    }

    alert(mostrarAtaqueDebilidad(pokemonUsuario));

    const pokemonContrincante = elegirPokemonAleatorio();
    alert(`La computadora ha elegido a ${pokemonContrincante.nombre} (${pokemonContrincante.emoji}).`);

    const resultado = mostrarResultado(pokemonUsuario, pokemonContrincante);
    alert(resultado);

    let opcion = prompt("¬øQuieres jugar otra vez?\n1. S√≠, eligiendo otro Pok√©mon üéÆ\n2. No, salir ‚ùå");

    switch (opcion) {
        case "1":
            return false;
        case "2":
            return null;
        default:
            alert("Ups, opci√≥n no v√°lida. Vuelve a iniciar una partida.");
            return null;
    }
}

function inciarJuego() {
    let continuar = true;

    while (continuar) {
        continuar = jugar();
    }

    alert("¬°Gracias por jugar! üëæ");
}

inciarJuego();
22